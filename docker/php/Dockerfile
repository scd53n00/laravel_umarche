FROM php:8.0-fpm-alpine

RUN apk update && \
  apk add --update linux-headers && \
  apk add oniguruma-dev libzip-dev libxml2-dev libmcrypt vim unzip git wget vim nano curl && \
  docker-php-ext-install xml soap zip

## cp932対応
RUN apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing gnu-libiconv
ENV LD_PRELOAD /usr/lib/preloadable_libiconv.so php

RUN set -x && \
  apk add --no-cache icu-libs && \
  apk add --no-cache --virtual build-dependencies icu-dev && \
  NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
  docker-php-ext-install -j${NPROC} intl && \
  docker-php-ext-install -j${NPROC} pdo_mysql && \
  apk del --no-cache --purge build-dependencies && \
  rm -rf /tmp/pear

## nodejs
RUN apk add nodejs npm

## composer
RUN set -x && \
  php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
  php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
  php composer-setup.php && \
  php -r "unlink('composer-setup.php');" && \
  mv composer.phar /usr/bin/composer.phar

## xdebug
RUN apk add gcc g++ make autoconf
RUN pecl install xdebug-3.2.0RC1 \
    && docker-php-ext-enable xdebug

RUN set -x && \
  deluser www-data && \
  addgroup -g 50 -S www-data && \
  adduser -u 1000 -D -S -G www-data www-data

COPY ./php.ini /usr/local/etc/php/php.ini